<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>projects</groupId>
    <artifactId>leaderboard</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <parent>
        <groupId>net.wasdev.wlp.maven.parent</groupId>
        <artifactId>liberty-maven-app-parent</artifactId>
        <version>2.1</version>
    </parent>
    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>
    <repositories>
      <repository>
        <id>oss.sonatype.org-snapshot</id>
        <url>http://oss.sonatype.org/content/repositories/snapshots</url>
        <releases>
          <enabled>false</enabled>
        </releases>
        <snapshots>
          <enabled>true</enabled>
        </snapshots>
      </repository>
    </repositories>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <app.name>leaderboard</app.name>
        <testServerHttpPort>9080</testServerHttpPort>
        <testServerHttpsPort>9443</testServerHttpsPort>
        <warContext>${app.name}</warContext>
        <package.file>${project.build.directory}/${project.artifactId}-${project.version}.zip</package.file>
        <packaging.type>usr</packaging.type>
        <!-- Cloud Foundry/IBM Cloud properties -->
        <cf.context>mybluemix.net</cf.context>
        <cf.target>https://api.ng.bluemix.net</cf.target>
        <cf.space>dev</cf.space>
        <cf.context.root>${cf.host}.${cf.context}/${warContext}</cf.context.root>

        <!-- The Cloud Foundry or IBM Cloud organization, username and password can be
            entered here. -->
        <!-- <cf.org></cf.org> -->
        <!-- <cf.username></cf.username> -->
        <!-- <cf.password></cf.password> -->
        <!-- This is the host for your app in IBM Cloud and what it will be called in the dashboard. -->
        <cf.host>${app.name}</cf.host>
        <gson-fire-version>1.8.0</gson-fire-version>
        <swagger-core-version>1.5.15</swagger-core-version>
        <okhttp-version>2.7.5</okhttp-version>
        <gson-version>2.8.1</gson-version>
        <threetenbp-version>1.3.5</threetenbp-version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>3.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.runtimetools</groupId>
            <artifactId>javametrics-agent</artifactId>
            <version>[1.2,2.0)</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.runtimetools</groupId>
            <artifactId>javametrics-dash</artifactId>
            <version>[1.2,2.0)</version>
            <scope>provided</scope>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.ibm.runtimetools</groupId>
            <artifactId>javametrics-rest</artifactId>
            <version>[1.2,2.0)</version>
            <scope>provided</scope>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.jaxrs20</artifactId>
            <version>1.0.18</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.json</artifactId>
            <version>1.0.18</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4.1212</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-core-version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp-version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>${okhttp-version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson-version}</version>
        </dependency>
        <dependency>
            <groupId>io.gsonfire</groupId>
            <artifactId>gson-fire</artifactId>
            <version>${gson-fire-version}</version>
        </dependency>
        <dependency>
            <groupId>org.threeten</groupId>
            <artifactId>threetenbp</artifactId>
            <version>${threetenbp-version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                </configuration>
            </plugin>
            <!-- Plugin to run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/it/**</exclude>
                            </excludes>
                            <reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Configure javametrics monitoring -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>copy-javametrics-dash</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                          <stripVersion>true</stripVersion>
                          <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/dropins</outputDirectory>
                          <includeArtifactIds>javametrics-dash</includeArtifactIds>
                      </configuration>
                    </execution>
                    <execution>
                        <id>copy-javametrics-rest</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                          <stripVersion>true</stripVersion>
                          <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/dropins</outputDirectory>
                          <includeArtifactIds>javametrics-rest</includeArtifactIds>
                      </configuration>
                    </execution>
                    <execution>
                        <id>copy-javametrics-agent</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                          <stripVersion>true</stripVersion>
                          <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/resources/</outputDirectory>
                          <includeArtifactIds>javametrics-agent</includeArtifactIds>
                      </configuration>
                    </execution>
                    <execution>
                        <id>copy-javametrics-asm</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                          <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/resources/asm</outputDirectory>
                          <includeGroupIds>org.ow2.asm</includeGroupIds>
                          <includeArtifactIds>asm,asm-commons</includeArtifactIds>
                      </configuration>
                    </execution>
                    <execution>
                        <id>copy-postgres-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>org.postgresql</includeGroupIds>
                            <includeArtifactIds>postgresql</includeArtifactIds>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/resources/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Plugin to run functional tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/it/**</include>
                            </includes>
                            <systemPropertyVariables>
                                <liberty.test.port>${testServerHttpPort}</liberty.test.port>
                                <war.context>${warContext}</war.context>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify-results</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <summaryFile>${project.build.directory}/test-reports/it/failsafe-summary.xml</summaryFile>
                    <reportsDirectory>${project.build.directory}/test-reports/it</reportsDirectory>
                </configuration>
            </plugin>
            <plugin>
              <groupId>au.com.dius</groupId>
              <artifactId>pact-jvm-provider-maven_2.12</artifactId>
              <version>3.5.11</version>
              <configuration>
                <serviceProviders>
                  <!-- You can define as many as you need, but each must have a unique name -->
                  <serviceProvider>
                    <name>scoreboard_provider</name>
                    <!-- All the provider properties are optional, and have sensible defaults (shown below) -->
                    <protocol>http</protocol>
                    <host>localhost</host>
                    <port>9080</port>
                    <path>/</path>
                    <!-- use this to set up and tear down test state
                      <stateChangeUrl>http://localhost:32784/tasks/pactStateChange</stateChangeUrl>
                    -->
                    <consumers>
                      <!-- Again, you can define as many consumers for each provider as you need, but each must have a unique name -->
                      <consumer>
                        <name>scoreboard_consumer</name>
                        <!--  currently supports a file path using pactFile or a URL using pactUrl -->
                        <pactFile>src/test/pacts/scoreboard_consumer-scoreboard_provider.json</pactFile>
                      </consumer>
                    </consumers>
                  </serviceProvider>
                </serviceProviders>
              </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>runnable</id>
            <properties>
                <package.file>${project.build.directory}/${app.name}.jar</package.file>
                <packaging.type>runnable</packaging.type>
            </properties>
        </profile>
        <profile>
            <id>liberty</id>
            <activation>
                <property>
                    <name>libertyEnv</name>
                    <value>!microclimate</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Default enablement of liberty-maven plugin -->
                    <plugin>
                        <groupId>net.wasdev.wlp.maven.plugins</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <extensions>true</extensions>
                        <configuration>
                            <looseApplication>false</looseApplication>
                            <!--appsDirectory>apps</appsDirectory-->
                            <assemblyArtifact>
                                <groupId>com.ibm.websphere.appserver.runtime</groupId>
                                <artifactId>wlp-microProfile1</artifactId>
                                <version>18.0.0.1</version>
                                <type>zip</type>
                            </assemblyArtifact>
                            <configDirectory>${basedir}/src/main/liberty/config</configDirectory>
                            <packageFile>${package.file}</packageFile>
                            <include>${packaging.type}</include>
                            <bootstrapProperties>
                                <default.http.port>${testServerHttpPort}</default.http.port>
                                <default.https.port>${testServerHttpsPort}</default.https.port>
                                <app.location>${project.artifactId}-${project.version}.war</app.location>
                            </bootstrapProperties>
                            <installAppPackages>project</installAppPackages>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-feature</id>
                                <phase>prepare-package</phase>
                                <goals>
                                  <goal>install-feature</goal>
                                </goals>
                                <configuration>
                                    <features>
                                        <acceptLicense>true</acceptLicense>
                                    </features>
                                    <outputDirectory>target/liberty-alt-output-dir</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>microclimate</id>
            <activation>
                <property>
                    <name>libertyEnv</name>
                    <value>microclimate</value>
                </property>
            </activation>
            <build>
                <directory>${microclimateOutputDir}</directory>
                <plugins>
                    <!-- Enablement of liberty-maven plugin in microclimate -->
                    <plugin>
                        <groupId>net.wasdev.wlp.maven.plugins</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <extensions>true</extensions>
                        <configuration>
                            <looseApplication>true</looseApplication>
                            <appsDirectory>apps</appsDirectory>
                            <installDirectory>/opt/ibm/wlp</installDirectory>
                            <userDirectory>${project.build.directory}/liberty/wlp/usr</userDirectory>
                            <configDirectory>${basedir}/src/main/liberty/config</configDirectory>
                            <packageFile>${package.file}</packageFile>
                            <include>${packaging.type}</include>
                            <bootstrapProperties>
                                <default.http.port>${testServerHttpPort}</default.http.port>
                                <default.https.port>${testServerHttpsPort}</default.https.port>
                                <app.location>${project.artifactId}-${project.version}.war</app.location>
                            </bootstrapProperties>
                            <installAppPackages>project</installAppPackages>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
